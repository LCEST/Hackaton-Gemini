---
import type { ICuePoint } from "../types/cuePoint";
interface Props {
  cuePoints: ICuePoint[];
  playbackId: string|null|undefined;
}

const { cuePoints, playbackId } = Astro.props;
---

<mux-player
  stream-type="on-demand"
  playback-id={playbackId || "O6LdRc0112FEJXH00bGsN9Q31yu5EIVHTgjTKRkKtEq1k"}

  metadata-video-title="Analyzed video"
  title="Uploaded video"
  loading="viewport"
  muted
></mux-player>

<script src="https://cdn.jsdelivr.net/npm/@mux/mux-player"></script>

<script define:vars={{ cuePoints }}>
const muxPlayerEl = document.querySelector('mux-player');
let allObservations = [];
let activeCuePoint;

function addCuePointsToElement() {
  muxPlayerEl.addCuePoints(cuePoints);
  allObservations = cuePoints.map(({value}) => value.reduce((acc, curr) => [...acc, curr.id], []));
  allObservations = allObservations.flat(1);
}

function setActiveObservations() {
  activeCuePoint = muxPlayerEl.activeCuePoint;
  const activeObservations = activeCuePoint.value.map((val) => val.id); // [observation-2, observation-3]
  activeObservations.forEach((obs) => document.getElementById(obs).classList.add('bg-blue-100', 'dark:bg-slate-900', '!scale-100'));
}

function scrollToElement() {
  const observationDiv = document.getElementById('observations-div');
  const activeObservationId = activeCuePoint.value[0].id;
  const activeEl = document.getElementById(activeObservationId);
  observationDiv.scrollTo({
    top: activeEl.offsetTop - observationDiv.offsetTop,
    behavior: 'smooth',
  });
}

const resetAllObservations = () => allObservations.forEach((obs) => document.getElementById(obs).classList.remove('bg-blue-100', 'dark:bg-slate-900', '!scale-100'));

muxPlayerEl.addEventListener('cuepointchange', resetAllObservations);
muxPlayerEl.addEventListener('cuepointchange', setActiveObservations);
muxPlayerEl.addEventListener('cuepointchange', scrollToElement);

if (muxPlayerEl.duration) {
  addCuePointsToElement();
} else {
  muxPlayerEl.addEventListener('durationchange', addCuePointsToElement, { once: true });
}
</script>

<style>
	mux-player {
		aspect-ratio: 16/9;
	}
</style>
