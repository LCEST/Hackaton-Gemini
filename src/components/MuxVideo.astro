---
interface Props {
  playbackId: string|null|undefined;
}

const {playbackId } = Astro.props;
---

<mux-player
  stream-type="on-demand"
  playback-id={playbackId || "O6LdRc0112FEJXH00bGsN9Q31yu5EIVHTgjTKRkKtEq1k"}

  metadata-video-title="Analyzed video"
  title="Uploaded video"
  loading="viewport"
  muted
></mux-player>

<script src="https://cdn.jsdelivr.net/npm/@mux/mux-player"></script>

<script>
const muxPlayerEl = document.querySelector('mux-player');
let allObservations = [];
let activeCuePoint;

function addCuePointsToElement() {
  allObservations = cuePoints.map(({value}) => value.reduce((acc, curr) => [...acc, curr.id], []));
  allObservations = allObservations.flat(1);
}


const resetAllObservations = () => allObservations.forEach((obs) => document.getElementById(obs).classList.remove('bg-blue-100', 'dark:bg-slate-900', '!scale-100'));



if (muxPlayerEl.duration) {
  addCuePointsToElement();
} else {
  muxPlayerEl.addEventListener('durationchange', addCuePointsToElement, { once: true });
}
</script>

<style>
	mux-player {
		aspect-ratio: 16/9;
	}
</style>
